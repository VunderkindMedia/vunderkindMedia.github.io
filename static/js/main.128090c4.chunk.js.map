{"version":3,"sources":["context/app/AppContext.js","consts/config.js","components/Settings.js","components/UsersList.js","components/SendPush.js","App.js","reportWebVitals.js","context/app/types.js","context/app/AppReducer.js","context/app/AppState.js","index.js"],"names":["AppContext","createContext","config","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Settings","useContext","getBannerImages","banner_images","uploadBannerImages","changeBannerImages","getAppTitle","app_title","setAppTitle","saveAppTitle","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","title_loading","setTitleLoading","useEffect","then","handlePreview","a","url","preview","originFileObj","name","substring","lastIndexOf","uploadButton","PlusOutlined","style","marginTop","className","listType","fileList","onChange","onPreview","customRequest","length","visible","title","footer","onCancel","alt","width","src","Search","value","e","target","onSearch","enterButton","type","spinning","UsersList","clients","getClients","setFilteredList","filtered_clients","selectedItems","setSelectedItems","searchValue","setSearchValue","column","filter","item","includes","rowSelection","selectedRowKeys","selectedRows","onSelect","record","selected","onSelectAll","changeRows","columns","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","placeholder","fixed","ellipsis","showTitle","render","address","placement","locale","emptyText","description","showSorterTooltip","size","bordered","dataSource","rowKey","pagination","pageSize","to","pathname","state","users_list","disabled","TextArea","Input","SendPush","pushTitle","setPushTitle","pushDescription","setPushDescription","loading","setLoading","success","setSuccess","sendPush","useHistory","location","goBack","console","log","onClick","LeftOutlined","rows","icon","SmileTwoTone","twoToneColor","extra","App","exact","activeClassName","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GET_CLIENTS","SET_FILTERED_LIST","GET_BANNER_IMAGES","SET_APP_TITLE","initialState","pushList","AppReducer","action","push_list","AppState","children","useReducer","dispatch","fetch","response","json","data","tempFiles","map","uid","form","FormData","append","method","body","res","tempImageList","status","catch","app_main_title","usersList","headers","JSON","stringify","Provider","ReactDOM","ruRu","document","getElementById"],"mappings":"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","file":"static/js/main.128090c4.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AppContext = createContext();\n","export const config = {\n  clientId: '1790',\n  clientSecret: '68c51e467d5cf9a53cb2a55c1c59928b',\n  custom_back_url: 'https://dodoma65.ru',\n  getBase64: (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n}\n","import { useState, useEffect, useContext } from 'react'\nimport { Upload, Modal, Row, Button, Input, Spin } from 'antd';\nimport { AppContext } from '../context/app/AppContext'\nimport { PlusOutlined } from '@ant-design/icons';\nimport { config } from '../consts/config'\n\nexport const Settings = () => {\n  const {\n    getBannerImages,\n    banner_images,\n    uploadBannerImages,\n    changeBannerImages,\n    getAppTitle,\n    app_title,\n    setAppTitle,\n    saveAppTitle\n  } = useContext(AppContext)\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [title_loading, setTitleLoading] = useState(false);\n\n  useEffect(() => {\n    setTitleLoading(true);\n    getBannerImages()\n    getAppTitle().then(() => {\n      setTitleLoading(false);\n    })\n    // eslint-disable-next-line\n  }, [])\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await config.getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n  const uploadButton = (\n      <div>\n        <PlusOutlined />\n        <div style={{ marginTop: 8 }}>Загрузить</div>\n      </div>\n  );\n    return (\n        <div className={'settings'}>\n\n            <h3>Изображения для рекламного баннера:</h3>\n          <Row className={\"settings__row\"}>\n          <Upload\n              listType=\"picture-card\"\n              fileList={banner_images}\n              onChange={({fileList, file}) => changeBannerImages(file, fileList)}\n              onPreview={handlePreview}\n              customRequest={({file}) => uploadBannerImages(file)}\n          >\n            {banner_images.length >= 3 ? null : uploadButton}\n          </Upload>\n          <Modal\n              visible={previewVisible}\n              title={previewTitle}\n              footer={null}\n              onCancel={handleCancel}\n          >\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n          </Row>\n\n          <h3>Название приложения:</h3>\n          <Row className={\"settings__row settings__title\"}>\n          <Input.Search\n            value={app_title}\n            onChange={e => setAppTitle(e.target.value)}\n            onSearch={() => {\n              setTitleLoading(true);\n              saveAppTitle().then(() => {\n                setTitleLoading(false);\n              })\n            }}\n            enterButton={<Button type={'default'}><Spin className={'settings__title_spin'} spinning={title_loading}/>Сохранить</Button>}\n          /></Row>\n        </div>\n    );\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport {Table, Button, Empty, Row, Tooltip} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from '../context/app/AppContext'\n\nexport const UsersList = () => {\n  const { clients, getClients, setFilteredList, filtered_clients } = useContext(AppContext);\n\n  const [selectedItems, setSelectedItems] =  useState([]);\n  const [searchValue, setSearchValue] =  useState('');\n\n  useEffect(()=> {\n    getClients()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSearch = (value, column) => {\n    setSearchValue(value)\n    if (value.length === 0) {\n      setFilteredList(clients)\n    } else {\n      setFilteredList(clients.filter(item => item[column].includes(value)))\n    }\n  }\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedItems(selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      setSelectedItems(selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      setSelectedItems(selectedRows);\n    },\n  };\n\n\n  const columns = [\n    {\n      title: 'Номер телефона',\n      dataIndex: 'client_phone',\n      width: 150,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div className={'users_list__columns_wrapper'}>\n            <input\n                className={'users_list__columns_input'}\n                placeholder={`Номер телефона`}\n                value={searchValue}\n                onChange={e => onSearch(e.target.value, 'client_phone')}\n            />\n          </div>\n      ),\n      fixed: 'left',\n    },\n    {\n      title: 'PUSH Token',\n      dataIndex: 'token',\n      width: 350,\n      ellipsis: {\n        showTitle: false,\n      },\n      render: address => (\n          <Tooltip placement=\"topLeft\" title={address}>\n            {address}\n          </Tooltip>\n      ),\n    },\n    {\n      title: 'OS',\n      dataIndex: 'os',\n      width: 100,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div className={'users_list__columns_wrapper'}>\n            <input\n                className={'users_list__columns_input'}\n                placeholder={`Операционная система`}\n                value={searchValue}\n                onChange={e => onSearch(e.target.value, 'os')}\n            />\n          </div>\n      ),\n    },\n  ];\n  return (\n      <div>\n      <Table title={() => <h3>Список пользователей для отправки уведомления</h3>}\n             locale={{emptyText: <Empty description={'Клиенты отсутствуют'} />}}\n             showSorterTooltip={true}\n             size={'small'}\n             rowSelection={rowSelection}\n             bordered\n             columns={columns}\n             dataSource={filtered_clients}\n             rowKey={'client_phone'}\n             pagination={{ pageSize: 10 }}  />\n        <Row className={'users_list__btn_wrapper'}>\n      <Link to={{\n        pathname: '/send_push',\n        state: { users_list: selectedItems }\n      }}>\n\n          <Button\n              type=\"default\"\n              disabled={selectedItems.length === 0}\n              className={'users_list__send_btn'}\n          >\n            Отправить уведомление выбранным пользователям\n          </Button>\n      </Link>\n          <Link to={{\n            pathname: '/send_push',\n            state: { users_list : clients }\n          }}>\n          <Button\n              type=\"primary\"\n              className={'users_list__send_btn_primary'}\n          >\n            Отправить уведомление  всем пользователям\n          </Button>\n          </Link>\n        </Row>\n\n      </div>\n  )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from '../context/app/AppContext';\nimport { LeftOutlined, SmileTwoTone } from '@ant-design/icons';\nimport { Button, Input, Form, Row, Modal, Spin, Result } from 'antd';\nconst { TextArea } = Input;\n\n\nexport const SendPush = () => {\n  const [pushTitle, setPushTitle] = useState('');\n  const [pushDescription, setPushDescription] = useState('');\n  const [loading, setLoading ] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const { sendPush } = useContext(AppContext);\n  const { location, goBack } = useHistory();\n  console.log(location.state.users_list)\n\n\n  return (\n      <div>\n\n        <div className={'send_push__header'}>\n          <Button type='dashed' onClick={() => goBack()}><LeftOutlined/> назад</Button>\n        </div>\n        {\n          success === false ?\n        <Form className=\"ant-advanced-search-form\">\n        <Row className={'send_push__row'}>\n        <Input onChange={e => setPushTitle(\n            e.target.value)}\n        disabled={loading}\n        value={pushTitle}\n        placeholder={'Заголовок уведомления'}\n        />\n        </Row>\n        <Row className={'send_push__row'}>\n        <TextArea onChange={e => setPushDescription(e.target.value)}\n        disabled={loading}\n        value={pushDescription}\n        placeholder={'Текст уведомления'}\n        rows={4}\n        />\n        </Row>\n        <Row className={'send_push__row'}>\n        <Button onClick={() => {\n          setLoading(true);\n          sendPush(pushTitle, pushDescription, location.state.users_list)\n              .then(() => {\n                setLoading(false);\n                setSuccess(true);\n              })\n        }}\n        disabled={pushTitle.length === 0 || pushDescription.length === 0 ||\n        loading}\n        type={'dashed'} >\n        Отправить уведомление\n        </Button>\n        </Row>\n        </Form>\n:\n          <Result\n            icon={<SmileTwoTone twoToneColor={'#52c41a'}/>}\n            title=\"Уведомление успешно отправлено!\"\n            extra={[\n              <Button onClick={() => goBack()} type=\"normal\" key=\"console\">\n                Вернуться к списку пользователей\n              </Button>\n            ]}\n          /> }\n      </div>\n  )\n}\n","import './App.scss';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport {Settings} from './components/Settings';\nimport {UsersList} from './components/UsersList';\nimport {SendPush} from './components/SendPush';\nimport {FaPaperPlane} from 'react-icons/all';\n\nfunction App() {\n  return (\n      <Router>\n        <div className={'main'}>\n          <nav className={'navigation'}>\n            <div className={'nav_header'}>\n              <p className={'nav_header__title'}>ДоДома</p>\n            </div>\n            <ul>\n              <li>\n                <NavLink exact className={'navigation__base_link'} activeClassName={'navigation__active_link'} to=\"/\">\n                  <div className={'top_radial_devider'}></div>\n                    <div className={'navigation__title_wrapper'}><FaPaperPlane className={'navigation__icon'}/>Настройки</div>\n                  <div className={'bottom_radial_devider'}></div>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact className={'navigation__base_link'} activeClassName={'navigation__active_link'} to=\"/push\">\n                  <div className={'top_radial_devider'}></div>\n                  <div className={'navigation__title_wrapper'}><FaPaperPlane className={'navigation__icon'}/>Уведомления</div>\n                  <div className={'bottom_radial_devider'}></div>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Switch>\n                <Route exact={true} path=\"/\">\n                    <Settings />\n                </Route>\n                <Route path=\"/push\">\n                    <UsersList />\n                </Route>\n                <Route path=\"/send_push\">\n                    <SendPush />\n                </Route>\n          </Switch>\n      </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GET_CLIENTS = \"GET_CLIENTS\";\nexport const GET_PUSH_LIST = \"GET_PUSH_LIST\";\nexport const SEND_PUSH_LIST = \"SEND_PUSH_LIST\";\nexport const SET_FILTERED_LIST = \"SET_FILTERED_LIST\";\nexport const GET_BANNER_IMAGES = \"GET_BANNER_IMAGES\";\nexport const SET_APP_TITLE = \"SET_APP_TITLE\";\n","import {\n  GET_CLIENTS,\n  GET_PUSH_LIST,\n  SET_FILTERED_LIST,\n  GET_BANNER_IMAGES,\n  SET_APP_TITLE\n} from \"./types\";\n\nexport const initialState = {\n  clients: [],\n  pushList: [],\n  banner_images: [],\n  app_title: ''\n};\n\nexport default function AppReducer(state, action) {\n  switch (action.type) {\n    case GET_CLIENTS:\n      return { ...state, clients: action.clients };\n    case SET_FILTERED_LIST:\n      return { ...state, filtered_clients: action.filtered_clients };\n    case GET_PUSH_LIST:\n      return { ...state, push_list: action.push_list };\n    case GET_BANNER_IMAGES:\n      return { ...state, banner_images: action.banner_images };\n    case SET_APP_TITLE:\n      return { ...state, app_title: action.app_title };\n    default:\n      return state;\n  }\n}\n","import React, { useReducer } from \"react\";\nimport { AppContext } from \"./AppContext\";\nimport AppReducer, { initialState } from \"./AppReducer\";\nimport { GET_CLIENTS, SET_FILTERED_LIST, GET_BANNER_IMAGES, SET_APP_TITLE } from \"./types\";\nimport { config } from '../../consts/config';\n\nexport const AppState = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const getClients = async () => {\n    const url = config.custom_back_url + \"/api/clients/get\";\n    fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            dispatch({ type: GET_CLIENTS, clients: response.data })\n            dispatch({ type: SET_FILTERED_LIST, filtered_clients: response.data })\n          })\n  }\n\n  const getBannerImages = async () => {\n    const url = config.custom_back_url + '/api/images/get';\n    fetch(url)\n        .then(response => response.json())\n        .then(response => {\n          const tempFiles = response.data.map(item => {\n            item.url = config.custom_back_url + item.src;\n            return item;\n          })\n          dispatch({ type: GET_BANNER_IMAGES, banner_images: tempFiles })\n    })\n  }\n\n  const uploadBannerImages = async (file) => {\n    console.log(file.uid);\n    const url = config.custom_back_url + '/api/images/upload';\n    const form = new FormData();\n    form.append('name', file.name);\n    form.append('file', file);\n    form.append('uid', file.uid)\n    return fetch(url, {\n      method: 'POST',\n      body: form\n    })\n        .then((res) => res.json())\n        .then((res) => {\n          const tempImageList = state.banner_images.map(item => {\n            if (item.uid === file.uid) {\n              item.status = 'success'\n            }\n            return item;\n          });\n\n          dispatch({ type: GET_BANNER_IMAGES, banner_images: tempImageList })\n        })\n        .catch(e => {\n          const tempImageList = state.banner_images.map(item => {\n            if (item.uid === file.uid) {\n              item.status = 'error'\n            }\n            return item;\n          });\n\n          dispatch({ type: GET_BANNER_IMAGES, banner_images: tempImageList })\n        })\n  }\n\n  const changeBannerImages = async (file, fileList) => {\n    console.log('changed', file);\n    if (file.status === 'removed') {\n      dispatch({ type: GET_BANNER_IMAGES, banner_images: fileList });\n      const url = config.custom_back_url + '/api/images/remove?uid='+ file.uid;\n      return fetch(url)\n    }  else if (file.status === 'uploading') {\n      dispatch({ type: GET_BANNER_IMAGES, banner_images: fileList });\n    }\n  }\n\n  const getAppTitle = async () => {\n    const url = config.custom_back_url + '/api/settings/get';\n    return fetch(url)\n        .then(response => response.json())\n        .then(response => {\n          dispatch({ type: SET_APP_TITLE, app_title: response.data.app_main_title })\n        })\n  }\n\n  const setAppTitle = (value) => {\n    dispatch({ type: SET_APP_TITLE, app_title: value })\n  }\n\n  const saveAppTitle = () => {\n    const url = config.custom_back_url + '/api/settings/change?app_main_title=' + state.app_title;\n    return fetch(url)\n  }\n\n  const setFilteredList = (data) => {\n    dispatch({ type: SET_FILTERED_LIST, filtered_clients: data })\n  }\n\n  const sendPush = async (title, description, usersList) =>  {\n    const url = config.custom_back_url + '/api/push/send';\n    const form = {\n      title: title,\n      description: description,\n      users_list: usersList\n    }\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    })\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        clients: state.clients,\n        filtered_clients: state.filtered_clients,\n        push_list: state.push_list,\n        banner_images: state.banner_images,\n        app_title: state.app_title,\n        getClients,\n        setFilteredList,\n        getBannerImages,\n        uploadBannerImages,\n        changeBannerImages,\n        getAppTitle,\n        setAppTitle,\n        saveAppTitle,\n        sendPush\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppState } from './context/app/AppState'\nimport { ConfigProvider  } from 'antd';\nimport ruRu from 'antd/lib/locale/ru_RU';\n\n\nReactDOM.render(\n\n    <AppState>\n      <ConfigProvider locale={ruRu}>\n        <App />\n      </ConfigProvider>\n    </AppState>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["consts/config.js","components/Home.js","context/app/AppContext.js","components/UsersList.js","components/SendPush.js","App.js","reportWebVitals.js","context/app/types.js","context/app/AppReducer.js","config/consts.js","context/app/AppState.js","index.js"],"names":["config","clientId","clientSecret","Home","code","useLocation","search","useEffect","form","FormData","append","md5","join","fetch","method","body","then","result","console","log","AppContext","createContext","UsersList","useContext","clients","getClients","setFilteredList","filtered_clients","useState","selectedItems","setSelectedItems","searchValue","setSearchValue","rowSelection","onChange","selectedRowKeys","selectedRows","onSelect","record","selected","onSelectAll","changeRows","columns","title","dataIndex","width","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","className","placeholder","value","e","target","length","filter","item","client_phone","includes","fixed","locale","emptyText","description","showSorterTooltip","size","dataSource","pagination","pageSize","to","pathname","state","userList","type","disabled","TextArea","Input","SendPush","pushTitle","setPushTitle","pushDescription","setPushDescription","Form","useForm","useHistory","goBack","location","onClick","LeftOutlined","rows","App","exact","activeClassName","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GET_CLIENTS","SET_FILTERED_LIST","initialState","pushList","AppReducer","action","push_list","AppState","children","useReducer","dispatch","a","API_URL","response","json","data","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d3b0df.chunk.js","sourcesContent":["export const config = {\n  clientId: '1790',\n  clientSecret: '68c51e467d5cf9a53cb2a55c1c59928b'\n}\n","import React, {useEffect} from 'react';\nimport {useLocation} from \"react-router-dom\";\nimport {config} from '../consts/config';\nimport md5 from 'js-md5'\n\nexport const Home = () => {\n  const code = useLocation().search;\n  useEffect(() => {\n    const form = new FormData();\n    form.append('client_id', config.clientId);\n    form.append('client_secret', config.clientSecret);\n    form.append('code', code);\n    form.append('verify', md5([config.clientId, config.clientSecret, code].join(':')));\n\n    fetch('https://joinposter.com/api/auth/manage', {\n      method: 'POST',\n      body: form\n    }).then(result => {\n      console.log(md5([config.clientId, config.clientSecret, code].join(':')));\n    })\n  }, [code])\n  return (\n      <div>\n       <p>TEST1</p>\n      </div>\n  )\n}\n","import { createContext, useEffect } from \"react\";\n\nexport const AppContext = createContext();\n","import React, { useState, useEffect, useContext } from 'react'\nimport {Table, Button, Empty} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from '../context/app/AppContext'\n\nexport const UsersList = () => {\n  const { clients, getClients, setFilteredList, filtered_clients } = useContext(AppContext);\n\n  const [selectedItems, setSelectedItems] =  useState([]);\n  const [searchValue, setSearchValue] =  useState('');\n\n  useEffect(()=> {\n    getClients()\n  }, []);\n\n  const onSearch = (value) => {\n    setSearchValue(value)\n    if (value.length === 0) {\n      setFilteredList(clients)\n    } else {\n      setFilteredList(clients.filter(item => item.client_phone.includes(value)))\n    }\n  }\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedItems(selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      setSelectedItems(selectedRows);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      setSelectedItems(selectedRows);\n    },\n  };\n\n\n  const columns = [\n    {\n      title: 'Номер телефона',\n      dataIndex: 'client_phone',\n      width: 150,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div className={'users_list__columns_wrapper'}>\n            <input\n                className={'users_list__columns_input'}\n                placeholder={`Номер телефона`}\n                value={searchValue}\n                onChange={e => onSearch(e.target.value)}\n            />\n          </div>\n      ),\n      fixed: 'left',\n    },\n    {\n      title: 'PUSH Token',\n      dataIndex: 'token',\n    },\n    {\n      title: 'OS',\n      dataIndex: 'os',\n    },\n  ];\n  return (\n      <div>\n      <Table title={() => <h3>Список пользователей для отправки уведомления</h3>}\n             locale={{emptyText: <Empty description={'Клиенты отсутствуют'} />}}\n             showSorterTooltip={true}\n             size={'small'}\n             rowSelection={rowSelection}\n             columns={columns}\n             dataSource={filtered_clients}\n             pagination={{ pageSize: 10 }}  />\n      <Link to={{\n        pathname: '/send_push',\n        state: { userList: selectedItems }\n      }}>\n        <Button\n            type=\"default\"\n            disabled={selectedItems.length === 0}\n            className={'users_list__send_btn'}\n        >\n          Отправить уведомление выбранным пользователям\n        </Button>\n      </Link>\n      </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { LeftOutlined, InboxOutlined } from '@ant-design/icons';\nimport { Button, Input, Form, Row, Upload } from 'antd';\nconst { TextArea } = Input;\n\n\nexport const SendPush = () => {\n  const [pushTitle, setPushTitle] = useState('');\n  const [pushDescription, setPushDescription] = useState('');\n  const [form] = Form.useForm();\n  const { location, goBack } = useHistory();\n  //location.state.userList\n\n\n  return (\n      <>\n        <div className={'send_push__header'}>\n          <Button type='dashed'  onClick={() => goBack()}><LeftOutlined /> назад</Button>\n        </div>\n        <Form className=\"ant-advanced-search-form\">\n          <Row className={'send_push__row'}>\n            <Input onChange={e => setPushTitle(e.target.value)} value={pushTitle} placeholder={'Заголовок уведомления'} />\n          </Row>\n          <Row className={'send_push__row'}>\n            <TextArea onChange={e => setPushDescription(e.target.value)} value={pushDescription} placeholder={'Текст уведомления'} rows={4} />\n          </Row>\n          <Row className={'send_push__row'}>\n            <Button disabled={ pushTitle.length === 0 || pushDescription.length === 0 } type={'dashed'} > Отправить уведомление </Button>\n          </Row>\n\n        </Form>\n      </>\n  )\n}\n","import './App.scss';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport {Home} from './components/Home';\nimport {UsersList} from './components/UsersList';\nimport {SendPush} from './components/SendPush';\nimport {FaPaperPlane} from 'react-icons/all';\n\nfunction App() {\n  return (\n      <Router>\n        <div className={'main'}>\n          <nav className={'navigation'}>\n            <div className={'nav_header'}>\n              <p className={'nav_header__title'}>ДоДома</p>\n            </div>\n            <ul>\n              <li>\n                <NavLink exact className={'navigation__base_link'} activeClassName={'navigation__active_link'} to=\"/\">\n                  <div className={'top_radial_devider'}></div>\n                    <div className={'navigation__title_wrapper'}><FaPaperPlane className={'navigation__icon'}/> Что-то</div>\n                  <div className={'bottom_radial_devider'}></div>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact className={'navigation__base_link'} activeClassName={'navigation__active_link'} to=\"/push\">\n                  <div className={'top_radial_devider'}></div>\n                  <div className={'navigation__title_wrapper'}><FaPaperPlane className={'navigation__icon'}/> Уведомления</div>\n                  <div className={'bottom_radial_devider'}></div>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"content\">\n            <Switch>\n                <Route exact={true} path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/push\">\n                    <UsersList />\n                </Route>\n                <Route path=\"/send_push\">\n                    <SendPush />\n                </Route>\n          </Switch>\n      </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GET_CLIENTS = \"GET_CLIENTS\";\nexport const GET_PUSH_LIST = \"GET_PUSH_LIST\";\nexport const SEND_PUSH_LIST = \"SEND_PUSH_LIST\";\nexport const SET_FILTERED_LIST = \"SET_FILTERED_LIST\";\n","import {\n  GET_CLIENTS,\n  GET_PUSH_LIST,\n  SET_FILTERED_LIST\n} from \"./types\";\n\nexport const initialState = {\n  clients: [],\n  pushList: []\n};\n\nexport default function AppReducer(state, action) {\n  switch (action.type) {\n    case GET_CLIENTS:\n      return { ...state, clients: action.clients };\n    case SET_FILTERED_LIST:\n      return { ...state, filtered_clients: action.filtered_clients };\n    case GET_PUSH_LIST:\n      return { ...state, push_list: action.push_list };\n    default:\n      return state;\n  }\n}\n","export const API_URL = 'http://localhost:3002/api';\n","import React, { useReducer } from \"react\";\nimport { AppContext } from \"./AppContext\";\nimport AppReducer, { initialState } from \"./AppReducer\";\nimport { API_URL } from \"../../config/consts\";\nimport { GET_CLIENTS, SET_FILTERED_LIST } from \"./types\";\n\nexport const AppState = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const getClients = async () => {\n    const url = API_URL + \"/clients/get\";\n    fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            dispatch({ type: GET_CLIENTS, clients: response.data })\n            dispatch({ type: SET_FILTERED_LIST, filtered_clients: response.data })\n          })\n  }\n\n  const setFilteredList = (data) => {\n    dispatch({ type: SET_FILTERED_LIST, filtered_clients: data })\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        clients: state.clients,\n        filtered_clients: state.filtered_clients,\n        push_list: state.push_list,\n        getClients,\n        setFilteredList\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppState } from './context/app/AppState'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppState>\n      <App />\n    </AppState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}